Option Explicit

Private cht As Chart

Sub Init(sh As Worksheet, graphName As String)

    'グラフデータがあるシートにグラフオブジェクトを作成する
    
    '▲Caution:
    ' .Chart でオブジェクトを取得するときになぜかコンテナのシート（sh）を無視して
    ' ActiveSheet の graphName を取得することが発覚。LOOPで各シートのグラフを変えて回るようなときにunsafe。
    sh.Activate
    
    Set cht = sh.ChartObjects(graphName).Chart
End Sub

'データ系列（＝series_idx）内の単一のデータ要素（＝data_idx）
Sub SetGraphLabel(series_idx As Integer, data_idx As Integer, rgb As Long)

    Dim p As Point
    Set p = cht.SeriesCollection(series_idx).Points(data_idx)
    p.ApplyDataLabels
    p.DataLabel.Format.AutoShapeType = msoShapeRectangle
    p.DataLabel.Format.Line.Visible = msoTrue
    p.DataLabel.Format.Line.ForeColor.rgb = rgb
    
End Sub

Sub SetGraphLabel_adjustXY(series_idx As Integer, data_idx As Integer, leftOffset As Single, topOffset As Single)

    Dim p As Point
    Set p = cht.SeriesCollection(series_idx).Points(data_idx)
    
    p.DataLabel.Left = p.DataLabel.Left + leftOffset
    p.DataLabel.Top = p.DataLabel.Top + topOffset
    
End Sub

Sub SetGraphRange(seriesHeader As Range, hanreiRange As Range)

    Dim seriesCnt As Integer
    Dim temp As String
    Dim i As Integer
    
    'シリーズ（データ1行分）の集まりの数を数える
    seriesCnt = cht.SeriesCollection.Count
    
    'データ1行分が cht.seriescollection(i) です。それらを削除（グラフはまっしろけになる）
    For i = seriesCnt To 1 Step -1
        '先頭から削除するとナンバリングが動的に変わるため、最大Cntから消しにかかる
        cht.SeriesCollection(i).Delete
    Next i
    
    'hanreiNameの行数ぶんだけ処理を実行します
    For i = 1 To hanreiRange.Rows.Count
        
        '新しいシリーズデータ
        cht.SeriesCollection.NewSeries
        
        '新たなデータ参照範囲はseriesHeaderの列数ぶんになります
        temp = "=SERIES({HANREI},{LABEL},{SERIES},{ORDER})"
        temp = Replace(temp, "{HANREI}", hanreiRange.Cells(i).Address(External:=True))
        temp = Replace(temp, "{LABEL}", seriesHeader.Address(External:=True))
        temp = Replace(temp, "{SERIES}", seriesHeader.Offset(i).Address(External:=True))
        temp = Replace(temp, "{ORDER}", i)
        cht.SeriesCollection(i).Formula = temp
        cht.SeriesCollection(i).axisGroup = xlPrimary
        
    Next i
    
End Sub

Sub SetGraphType(seriesNames() As String, graphType As XlChartType, axisGroup As XlAxisGroup, Optional needLabel As Boolean, Optional labelFontSize As Integer = 10, Optional rgbColor As Long)

    '▲Caution:
    '操作対象のグラフのあるシートがアクティブ化されていること
    'LOOPハズしてSeriesCollectionに対してシリーズの名前で直接指定...はできなかった（確認済み）
    
    Dim i As Integer
    Dim j As Integer
    
    For i = 0 To UBound(seriesNames)
    
        For j = 1 To cht.SeriesCollection.Count
    
            'seriesNameを見つけた！
            If cht.SeriesCollection(j).Name = seriesNames(i) Then
        
                'グラフの種類
                 cht.SeriesCollection(j).ChartType = graphType
                
                '主軸か第2軸か
                cht.SeriesCollection(j).axisGroup = axisGroup
                
                'データラベルの表示非表示
                If needLabel Then
                    cht.SeriesCollection(j).HasDataLabels = True
                    cht.SeriesCollection(j).DataLabels.ShowValue = True
                    cht.SeriesCollection(j).DataLabels.Font.Size = labelFontSize
                    cht.SeriesCollection(j).DataLabels.Position = xlLabelPositionAbove
                Else
                    cht.SeriesCollection(j).HasDataLabels = False
                End If
                
                '色の指定
                If rgbColor <> 0 Then
                    cht.SeriesCollection(j).Format.Line.ForeColor.rgb = rgbColor
                End If
                
                Exit For    'つぎのseriesNameへ（※同じseriesNameは無い前提とする）
            
            End If
    
        Next j
        
    Next i
    
End Sub

'前提: seriesNamesとrgbColorの要素数は同じであること。同じidxのseriesNameに対してrgbColorで着色される
Sub SetGraphColor(seriesNames() As String, rgbColors() As String)

    Dim i As Integer
    Dim j As Integer
    
    For i = 0 To UBound(seriesNames)
        For j = 1 To cht.SeriesCollection.Count
            'seriesNameを見つけた！
            If cht.SeriesCollection(j).Name = seriesNames(i) Then
                cht.SeriesCollection(j).Format.Fill.ForeColor.rgb = rgbColors(i)
                Exit For    'つぎのseriesNameへ（※同じseriesNameは無い前提とする）
            End If
        Next j
    Next i
    
End Sub

Sub SetGraphColorpattern(seriesNames() As String, Optional ptn_type As MsoPatternType = msoPatternLightDownwardDiagonal, Optional ptn_color As Long = "255")

    Dim i As Integer
    Dim j As Integer
    
    For i = 0 To UBound(seriesNames)
        For j = 1 To cht.SeriesCollection.Count
            'seriesNameを見つけた！
            If cht.SeriesCollection(j).Name = seriesNames(i) Then
                cht.SeriesCollection(j).Select
                With Selection.Format.Fill
                    .Visible = msoTrue
                    .ForeColor.rgb = ptn_color
                    .Patterned ptn_type
                End With
            End If
            
        Next j
    Next i
    
End Sub

Sub SetGraphLineDashStyle(seriesNames() As String, Optional style As MsoLineDashStyle = msoLineDash)

    Dim i As Integer
    Dim j As Integer
    
    For i = 0 To UBound(seriesNames)
        For j = 1 To cht.SeriesCollection.Count
            'seriesNameを見つけた！
            If cht.SeriesCollection(j).Name = seriesNames(i) Then
                cht.SeriesCollection(j).Select
                With Selection.Format.Line
                    .Visible = msoTrue
                    .DashStyle = style
                End With
            End If
        Next j
    Next i
    
End Sub

Property Get Name() As String
    Name = cht.Name
End Property
Property Get HorizonY() As Single
    HorizonY = (cht.PlotArea.InsideTop - cht.ChartArea.Top) + cht.PlotArea.InsideHeight
End Property
Property Get VerticalX() As Single
    VerticalX = (cht.PlotArea.InsideLeft - cht.ChartArea.Left) + cht.PlotArea.InsideWidth
End Property
