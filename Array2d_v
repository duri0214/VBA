Option Explicit

'variant2次元配列を操作します

'dataを1行増やします
Private Function AddNewRecord(data As Variant, template As Variant) As Variant
    
    Dim retValue As Variant
    Dim i As Long
    Dim j As Long
    
    'IsArray?
    If IsValidArray(data) Then
        'Add New Record
        ReDim retValue(LBound(data, 1) To UBound(data, 1) + 1, LBound(data, 2) To UBound(data, 2))
        'Refill
        For i = LBound(data, 1) To UBound(data, 1)
            For j = LBound(data, 2) To UBound(data, 2)
                retValue(i, j) = data(i, j)
            Next j
        Next i
    Else
        'Add New Record
        ReDim retValue(0, LBound(template) To UBound(template))
    End If
    
    AddNewRecord = retValue

End Function

'dataのrow行目の1行を返します
Function GetRecord(data As Variant, row As Long) As Variant

    Dim i As Long
    Dim retValue As Variant
    
    'New
    ReDim retValue(LBound(data, 2) To UBound(data, 2))
    
    'Refill
    For i = LBound(data, 2) To UBound(data, 2)
        retValue(i) = data(row, i)
    Next i
    
    GetRecord = retValue
    
End Function

'recordをdataの最終行にくっつける
Function AddRecord(data As Variant, record As Variant) As Variant

    Dim col As Integer
    Dim retValue As Variant
    
    'IsArray?
    If IsValidArray(data) Then
        '列数が同じ場合のみ処理をし、そうでない場合は data の配列をそのまま返す
        If UBound(data, 2) = UBound(record) Then
        
            'New
            retValue = AddNewRecord(data, record)
            
            'Refill
            For col = LBound(retValue, 2) To UBound(retValue, 2)
                retValue(UBound(retValue, 1), col) = record(col)
            Next col
            
        Else
            retValue = data
        End If
    Else
        'New
        retValue = AddNewRecord(data, record)
        
        'Refill
        For col = LBound(retValue, 2) To UBound(retValue, 2)
            retValue(UBound(retValue, 1), col) = record(col)
        Next col
    End If
    
    AddRecord = retValue
    
End Function

Private Function IsValidArray(targetArray As Variant) As Boolean
    
    'targetArrayがnullかどうかを調べる関数。
    '本来この関数はいらなくて if targetArray = null then... とやりたいところだが
    'vbaでは、配列にnullを仕込むことができないため、わざわざエラー無視の状態にして、
    '強制的に配列の第一次元目の要素数を求める
    '配列にアクセスできてなければ（エラーがhitしていれば）falseを返す（配列がnullってるってこと）
    '配列にアクセスできれば、trueを返す
    
    Dim checkValue As Variant
    Dim retValue As Boolean
    
    On Error Resume Next                                            'エラーを無効化
    
    checkValue = UBound(targetArray, 1)                             '強制的に配列の第一次元目の要素数を求める
    
    If Err.Number > 0 Then                                          'Errorが発生したら、未定義配列です。
        retValue = False
    Else                                                            'そうでないなら、1以上の要素が宣言済みです。
        retValue = True
    End If
    Err.Clear                                                       'エラーオブジェクト初期化
    
    On Error GoTo 0                                                 'エラーを有効化
    
    IsValidArray = retValue                                         '検査結果を返す

End Function
